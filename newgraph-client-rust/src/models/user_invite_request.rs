/* 
 * newlife-creator-api-eu-dev
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-06-09T06:13:03Z
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct UserInviteRequest {
  #[serde(rename = "phone")]
  phone: String,
  #[serde(rename = "fullName")]
  full_name: String,
  #[serde(rename = "email")]
  email: Option<String>
}

impl UserInviteRequest {
  pub fn new(phone: String, full_name: String) -> UserInviteRequest {
    UserInviteRequest {
      phone: phone,
      full_name: full_name,
      email: None
    }
  }

  pub fn set_phone(&mut self, phone: String) {
    self.phone = phone;
  }

  pub fn with_phone(mut self, phone: String) -> UserInviteRequest {
    self.phone = phone;
    self
  }

  pub fn phone(&self) -> &String {
    &self.phone
  }


  pub fn set_full_name(&mut self, full_name: String) {
    self.full_name = full_name;
  }

  pub fn with_full_name(mut self, full_name: String) -> UserInviteRequest {
    self.full_name = full_name;
    self
  }

  pub fn full_name(&self) -> &String {
    &self.full_name
  }


  pub fn set_email(&mut self, email: String) {
    self.email = Some(email);
  }

  pub fn with_email(mut self, email: String) -> UserInviteRequest {
    self.email = Some(email);
    self
  }

  pub fn email(&self) -> Option<&String> {
    self.email.as_ref()
  }

  pub fn reset_email(&mut self) {
    self.email = None;
  }

}



