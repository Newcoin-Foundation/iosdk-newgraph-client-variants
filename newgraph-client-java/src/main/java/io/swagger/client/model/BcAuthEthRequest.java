/*
 * newlife-creator-api-eu-dev
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2022-05-20T13:39:48Z
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * BcAuthEthRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-05-24T15:32:28.129Z")
public class BcAuthEthRequest {
  @SerializedName("nftIndex")
  private String nftIndex = null;

  @SerializedName("collectionAddress")
  private String collectionAddress = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("signature")
  private String signature = null;

  @SerializedName("nonce")
  private String nonce = null;

  @SerializedName("timestamp")
  private String timestamp = null;

  public BcAuthEthRequest nftIndex(String nftIndex) {
    this.nftIndex = nftIndex;
    return this;
  }

   /**
   * Get nftIndex
   * @return nftIndex
  **/
  @ApiModelProperty(required = true, value = "")
  public String getNftIndex() {
    return nftIndex;
  }

  public void setNftIndex(String nftIndex) {
    this.nftIndex = nftIndex;
  }

  public BcAuthEthRequest collectionAddress(String collectionAddress) {
    this.collectionAddress = collectionAddress;
    return this;
  }

   /**
   * Get collectionAddress
   * @return collectionAddress
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCollectionAddress() {
    return collectionAddress;
  }

  public void setCollectionAddress(String collectionAddress) {
    this.collectionAddress = collectionAddress;
  }

  public BcAuthEthRequest address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public BcAuthEthRequest signature(String signature) {
    this.signature = signature;
    return this;
  }

   /**
   * Get signature
   * @return signature
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSignature() {
    return signature;
  }

  public void setSignature(String signature) {
    this.signature = signature;
  }

  public BcAuthEthRequest nonce(String nonce) {
    this.nonce = nonce;
    return this;
  }

   /**
   * Get nonce
   * @return nonce
  **/
  @ApiModelProperty(value = "")
  public String getNonce() {
    return nonce;
  }

  public void setNonce(String nonce) {
    this.nonce = nonce;
  }

  public BcAuthEthRequest timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BcAuthEthRequest bcAuthEthRequest = (BcAuthEthRequest) o;
    return Objects.equals(this.nftIndex, bcAuthEthRequest.nftIndex) &&
        Objects.equals(this.collectionAddress, bcAuthEthRequest.collectionAddress) &&
        Objects.equals(this.address, bcAuthEthRequest.address) &&
        Objects.equals(this.signature, bcAuthEthRequest.signature) &&
        Objects.equals(this.nonce, bcAuthEthRequest.nonce) &&
        Objects.equals(this.timestamp, bcAuthEthRequest.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nftIndex, collectionAddress, address, signature, nonce, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BcAuthEthRequest {\n");
    
    sb.append("    nftIndex: ").append(toIndentedString(nftIndex)).append("\n");
    sb.append("    collectionAddress: ").append(toIndentedString(collectionAddress)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    signature: ").append(toIndentedString(signature)).append("\n");
    sb.append("    nonce: ").append(toIndentedString(nonce)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

